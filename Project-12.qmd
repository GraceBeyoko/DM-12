---
title: "Project-12"
format: html
---

```{r, message=FALSE, warning=FALSE}
here::i_am("DM-12.Rproj")
library(here)
library(vroom)
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggthemes)
library(ggplot2)
library(knitr)
library(patchwork)
library(stringr)
library(scatterplot3d)
```


## Data loading 
```{r, warning=FALSE, message=FALSE}
educ_expenditure <- vroom(here("data", "Expenditure on education.csv"), 
                          locale=locale(decimal_mark = "."))
GDP_capita <- vroom(here("data", "GDP per capita.csv"), 
                    locale=locale(decimal_mark = "."))
life_expectancy <- vroom(here("data", "life_expectancy.csv"), 
                         locale=locale(decimal_mark = "."))
PressFreedom <- vroom(here("data", "PressFreedom.csv"), 
                      locale=locale(decimal_mark = "."))
GDP <- vroom(here("data", "GDP.csv"), 
             locale=locale(decimal_mark = "."))
enrolment  <- vroom(here("data", "enrolment.csv"), 
                    locale=locale(decimal_mark = "."))
illiteracy <- vroom(here("data", "illiteracy.csv"), 
                    locale=locale(decimal_mark = "."))
electricity <- vroom(here("data", "Electricity.csv"), 
                     locale=locale(decimal_mark = "."), 
                     na="..")
institution <- vroom(here("data", "stability-democratic-institutions-index.csv"), 
                     locale=locale(decimal_mark = "."))
rural <- vroom("data/Rural.csv", col_types=cols(
   DEMO_IND = col_character(),
   Indicator = col_character(),
   LOCATION = col_character(),
   Country = col_character(),
   TIME = col_double(),
   Time = col_double(),
   Value = col_double(),
   `Flag Codes` = col_character(),
   Flags = col_character(),
   .delim = ","))
young_pop <- vroom(here("data", "young_population.csv"), 
                     locale=locale(decimal_mark = "."))
```

## Github 

[Here](https://github.com/GraceBeyoko/DM-12.git) is the link to our Github repository.

## Sources

We used the table from the Our World in Data website for the Stability of democratic institutions index variable, available [here](https://ourworldindata.org/grapher/stability-democratic-institutions-index-bti?tab=table).

The Press freedom index and the Access to electricity tables are both sourced from the World Bank website, respectively available [here](https://govdata360.worldbank.org/indicators/h3f86901f?country=BRA&indicator=32416&viz=line_chart&years=2002,2023) and [here](https://databank.worldbank.org/reports.aspx?source=2&series=EG.ELC.ACCS.ZS&country=#).

The rest of our data (GDP, GDP per capita, rural population, life expectancy at birth, public expenditure allocated towards education, the total net enrolment rate by level of education, illiterate population and youth population) comes from the UNESCO website, available [here](http://data.uis.unesco.org/?lang=en&SubSessionId=4db844f6-01dd-458d-84db-7a36d4601fa2&themetreeid=-200). To find each of them in the website, we did the following :

- for GDP and GDP per capita, we selected the "demographic and socio-economic" category and then the "socio-economic" section. 

- for rural population and life expectancy at birth, we selected the "demographic and socio-economic" category and then the "demographic" section. 

- for expenditure allocated towards education, we selected the "Education" category then the "Other policy relevant indicators" section and then the "Government expenditure on education as a percentage of GDP" sub-section

- for the total net enrolment rate by level of education, we selected the "Education" category then the "Other policy relevant indicators" section and then "Number of students and enrolment/attendance rates by level of education" and then the "Enrolment ratios" sub-section. Here, we choose each level of education but only for both sexes. 

- for illiterate population, we selected the "Education" category then the "Other policy relevant indicators" section then the "Number of illiterates/percentage of illiterate who are female" sub-section and then we select "illiterate population".

- for youth population, we selected the "Demographic and socio-economic" category and then the "demographic indicators" section. 

## Sources description

Our World in Data is a free online publication founded by Max Roser, an economist, and directed by the University of Oxford. They focus on providing comprehensive database and data visualizations to make information about global development more accessible. 

The World Bank is a financial institution that provides loans and grants to the governments of developing countries for the purpose of pursuing investments projects. On top of that, they collect, analyse, and publish a wide range of data on various aspects of the economies and societies of their member countries. These data are made available to the public and are widely used by researchers, policy-makers, businesses, and the general public.

The United Nations Educational, Scientific and Cultural Organization (UNESCO) is a specialized agency of the United Nations established in 1945. The organization mission is to contribute to the building of peace, the eradication of poverty, sustainable development and intercultural dialogue through education, sciences and culture. One of their objectives is to ease access to data. That is why, they also produce database about education, culture, science, and communication.

## Data Cleaning 

We are now cleaning the variables from the UNESCO website.


All the datasets from the UNESCO site have the same structure, as seen below:

The columns' names of the Expenditure on Education dataset are : `r educ_expenditure |> names()`.

The columns' names of the GDP per capita dataset are :`r GDP_capita |> names()`.

The columns' names of the GDP dataset are :`r GDP |> names()`.

The columns' names of the Young Population dataset are :`r young_pop |> names()`.

The columns' names of the Enrolment by level of Education dataset are :`r enrolment |> names()`.

The columns' names of the Illiteracy dataset are :`r illiteracy |> names()`.

The columns' names of the Rural population share dataset are :`r rural |> names()`.


That is why we can apply the same function to each to the UNESCO datasets. Here we choose to eliminate Flags, Flag Codes and the indicator codes because they do not fall in our research scope. On top of that, we can see that there are two variables, Times and TIMES, that are duplicate of each other as seen in the following. So we will also removes the TIMES column.

```{r}
sum(educ_expenditure$Time == educ_expenditure$TIME) == nrow(educ_expenditure)
```

Here, we see that this column contains the same value each time. So, we will also remove this column.
```{r}
educ_expenditure |>
  distinct(NATMON_IND) |> 
  knitr::kable()
```

We will now apply the following function to all of the UNESCO data.
```{r}
datacleaning_unesco <- function(data){
    data |> select(-`Flag Codes`, - Flags, - TIME, -ends_with("IND"))
}
```

```{r}
educ_expenditure <- datacleaning_unesco(educ_expenditure)
GDP_capita <- datacleaning_unesco(GDP_capita)
GDP <- datacleaning_unesco(GDP)
young_pop <- datacleaning_unesco(young_pop)
enrolment  <- datacleaning_unesco(enrolment)
illiteracy <-datacleaning_unesco(illiteracy)
rural <- datacleaning_unesco(rural)
```
On modifie ces deux variables pour qu'elles soient à la même unité que d'autres variables avec lesquelles on va les utiliser.
```{r}
young_pop <- young_pop |> mutate("Value"= Value * 10^3, "Indicator"= "Population aged 15-24 years (number)")
GDP <- GDP |> mutate("Value"= Value / 10^6, "Indicator"= "GDP, US$ (millions)")
```

We now are doing the data cleaning of the electricity variable. 
```{r}
electricity |> 
  names()|>
  head(n=10) |>
  knitr::kable()
```

Here, we want to see what values these columns take. 
```{r}
electricity |> 
  distinct(`Series Code`, `Series Name`) |> 
  knitr::kable()
```

Because access to electricity is our variable of interest, we filter the dataset.
```{r}
electricity <- electricity |>
  filter(`Series Name`== "Access to electricity (% of population)")|> 
  select(- `Series Code`)
```

We now are going to rename the columns for them to match the other variables from the UNESCO.
```{r}
electricity <- electricity |> 
  rename("Country" = "Country Name", "LOCATION"= "Country Code", "Indicator"="Series Name")
```

We do pivot_longer in order to have all of our datasets in the same format.
```{r}
electricity <- electricity |> 
  pivot_longer(!(Indicator| Country| LOCATION)) |> 
  rename("Time"= "name", "Value"= "value") |> 
  mutate("Time"= as.numeric(substr(Time, 1, 4)))
```

We now are cleaning the PressFreedom variable.
```{r}
PressFreedom |> 
  names() |>
  head(n=10) |>
  knitr::kable()
```

```{r}
PressFreedom |> 
  distinct(`Subindicator Type`, `Indicator ID`) |>
  knitr::kable()
```

```{r}
PressFreedom <- PressFreedom |> 
  select(- `Indicator ID`, - `Subindicator Type`)
```

```{r}
PressFreedom <- PressFreedom |> rename("Country" = "Country Name", "LOCATION"= "Country ISO3")
```

```{r}
PressFreedom |> 
  count(Indicator) |> 
  knitr::kable()
```

Because our PressFreedom table contains two indicators we split the table in order to have two tables representing each indicator. 
```{r}
PressFreedomIndex <- PressFreedom |> filter(Indicator == "Press Freedom Index")
PressFreedomRank <- PressFreedom |> filter(Indicator == "Press Freedom Rank")
```

```{r}
PressFreedomIndex <- PressFreedomIndex |> 
  pivot_longer(!(Indicator | Country | LOCATION)) |>
  rename("Time" = "name", "Press Freedom Index" = "value") |> filter(`Press Freedom Index` >= 0 & `Press Freedom Index` <= 100) |>
  mutate(Time = ifelse(is.na(Time), NA, as.numeric(Time))) |> filter(Time >= 2005 & Time <= 2021)
```


Since our analysis is not at the individual level, we are going to only select "Both Sexes" values. Then, we will remove the columns we deem unnecessary and rename the remaining columns. 


To finish, we now are cleaning the Institution variable, which only consists of renaming its columns. 
```{r}
institution <- institution |> rename("Country" = "Entity", "LOCATION"= "Code", "Value"= "stability_dem_inst_bti", "Time"= "Year")|> mutate("Indicator"= "Stability of Institutions")
```

## Data description and Tables 

The government expenditure on education is expressed in millions US$. 

This table has `r educ_expenditure |> ncol()` columns, which are `r educ_expenditure |> names()`.
It has `r educ_expenditure |> nrow()` rows and each of them represents a particular country at a particular year. Here is a table with basic statistics of the Expenditure on education variable.
```{r}
educ_expenditure |> 
  filter(Country != "Holy See") |> 
  group_by(Country) |> 
  summarise("min" = round(min(Value, na.rm=TRUE), 2), "median" = round(median(Value, na.rm=TRUE), 2), "max"= round(max(Value, na.rm=TRUE), 2), "mean"= round(mean(Value, na.rm=TRUE), 2)) |> 
  head(n=10) |> 
  knitr::kable(caption= "Statistics of expenditure on education per year")
```



The GDP and GDP per capita are expressed in terms of current US$. 

This GDP table has `r GDP |> ncol()` columns, which are `r GDP |> names()`. It has `r GDP |> nrow()` rows and each of them represents a particular country at a particular year. Here is a table with basic statistics of the GDP variable.  
```{r}
GDP |> 
  group_by(Country) |> 
  summarise("min" = min(Value, na.rm=TRUE), "median" = median(Value, na.rm=TRUE), "max"= max(Value, na.rm=TRUE), "mean"= mean(Value, na.rm=TRUE)) |> 
  head(n=10) |> 
  knitr::kable(caption= "Statistics of GDP")
```

This GDP per capita  table has `r GDP_capita |> ncol()` columns, which are `r GDP_capita |> names()`. It has `r GDP_capita |> nrow()` rows and each of them represents a particular country at a particular year. Here is a table with basic statistics of the GDP per capita variable. 
```{r}
GDP_capita |> 
  group_by(Country) |> 
  summarise("min" = min(Value, na.rm=TRUE), "median" = median(Value, na.rm=TRUE), "max"= max(Value, na.rm=TRUE), "mean"= round(mean(Value, na.rm=TRUE), 2)) |> 
  head(n=10) |>
  knitr::kable(caption= "Statistics of GDP per capita per year")
```



Life expectancy at birth is expressed in total years.

This Life expectancy at birth table has `r life_expectancy|> ncol()` columns, which are `r life_expectancy |> names()`. It has `r life_expectancy|> nrow()` rows and each of them represents a particular country at a particular year. Here is a table with basic statistics of the Life expectancy at birth variable.  
```{r}
life_expectancy |> 
  group_by(Country) |> 
  summarise("min" = min(Value, na.rm=TRUE), "median" = median(Value, na.rm=TRUE), "max"= max(Value, na.rm=TRUE), "mean"= round(mean(Value, na.rm=TRUE),2)) |> 
  head(n=10) |> 
  knitr::kable(caption= "Statistics of life expectancy at birth (years) per year")
```

The young population is expressed in number.

This total young population table has `r young_pop |> ncol()` columns, which are `r young_pop |> names()`. It has `r young_pop|> nrow()` rows and each of them represents a particular country at a particular year. Here is a table with basic statistics of the total population variable. 
```{r}
young_pop |> 
  filter(Country != "Falkland Islands (Malvinas)") |> 
  group_by(Country) |> 
  summarise("min" = min(Value, na.rm=TRUE), "median" = median(Value, na.rm=TRUE), "max"= max(Value, na.rm=TRUE), "mean"= round(mean(Value, na.rm=TRUE),2)) |> 
  head(n=10) |> 
  knitr::kable(caption= "Statistics of young population per year")
```

The total net enrolment rate (in upper secondary, lower secondary and primary) of both sexes is expressed in percentage. 

This  total net enrolment rate table has `r enrolment |> ncol()` columns, which are `r enrolment |> names()`. It has `r enrolment |> nrow()` rows and each of them represents a particular country at a particular year. Here is a table with basic statistics of the total net enrolment rate at birth variable.  
```{r}
enrolment |> 
  filter(Country != "Holy See") |> 
  group_by(Country) |> 
  summarise("min" = round(min(Value, na.rm=TRUE),2), "median" = round(median(Value, na.rm=TRUE), 2), "max"= round(max(Value, na.rm=TRUE),2),  "mean"= round(mean(Value, na.rm=TRUE),2)) |> 
  head(n=10) |> 
  knitr::kable(caption= "Statistics of enrolment per year")
```

The Rural population is expressed as a percentage of the total population.

This Rural population table has `r rural |> ncol()` columns, which are `r rural |> names()`. It has `r rural |> nrow()` rows and each of them represents a particular country at a particular year. Here is a table with basic statistics of the Rural population variable.
```{r, warning= FALSE}
rural |> 
  group_by(Country) |> 
  summarise("min" = min(Value, na.rm=TRUE), "median" = median(Value, na.rm=TRUE), "max"= max(Value, na.rm=TRUE), "mean"= round(mean(Value, na.rm=TRUE),2)) |> 
  head(n=10) |> 
  knitr::kable(caption= "Statistics of rural population share per year")
```

The access to electricity is measured as a percentage of the population.

This access to electricity table has `r electricity |> ncol()` columns, which are `r electricity |> names()`. It has `r electricity |> nrow()` rows and each of them represents a particular country at a particular year. Here is a table with basic statistics of the access to electricity variable.  
```{r}
electricity |> 
  group_by(Country) |> 
  filter(!(Country %in% c("Kosovo", "American Samoa", "Not classified"))) |>
  summarise("min" = round(min(Value, na.rm=TRUE),2),  "median" = round(median(Value, na.rm=TRUE),2),  "max"= round(max(Value, na.rm=TRUE), 2), "mean"= round(mean(Value, na.rm=TRUE),2)) |> 
  head(n=10) |> 
  knitr::kable(caption= "Statistics of electricity access per year")
```

The press freedom table shows for each country their rank and index. The index used ranges from 0 to 100 with 100 being a country with the best press freedom. This Index has been created by the Reporters Without Borders(RSF).

This  press freedom index table has `r PressFreedomIndex |> ncol()` columns, which are `r PressFreedomIndex |> names()`. It has `r PressFreedomIndex |> nrow()` rows and each of them represents a particular country at a particular year. Here is a table with basic statistics of the  press freedom variable.  
```{r}
PressFreedomIndex |> group_by(Country) |> 
  summarise("min" = round(min(`Press Freedom Index`, na.rm=TRUE), 2), "median" = round(median(`Press Freedom Index`, na.rm=TRUE), 2), "max"= round(max(`Press Freedom Index`, na.rm=TRUE), 2),  "mean"= round(mean(`Press Freedom Index`, na.rm=TRUE),2)) |> 
  head(n=10) |> 
  knitr::kable(caption= "Statistics of freedom of press per year")
```



The stability of institutions of each country is represented with the Bertelsmann Transformation Index (BTI). It ranges from 0 to 10 with 10 representing the most stable countries. This index is published by the Bertelsmann Stiftung, a German private foundation.

This stability of institutions table has `r institution |> ncol()` columns, which are `r institution |> names()`. It has `r institution|> nrow()` rows and each of them represents a particular country at a particular year. Here is a table with basic statistics of the stability of institutions variable. 
```{r}
institution |> group_by(Country) |> 
  summarise("min" = round(min(Value, na.rm=TRUE),2), "median" = round(median(Value, na.rm=TRUE),2), "max"= round(max(Value, na.rm=TRUE), 2), "mean"= round(mean(Value, na.rm=TRUE),2)) |> 
  head(n=10) |> 
  knitr::kable(caption= "Statistics of institution stability per year")
```


## Research question description 

Most people today complete secondary education, which is a major shift from past trends. In the year 1820, only 12 percent of people worldwide were literate, which is defined as the ability of reading and writing. Since then, there has been a notable reversal. The global literacy rate has risen by 4% per five years for the previous 65 years, from 42% in 1960 to 86% in 2015. Even with these advancements, a sizeable portion of the population, 14% of the global population as of 2016, remains illiterate. 
There is debate on the reasons for this ongoing illiteracy, however elements like poverty, population increase, and ineffectual government initiatives are frequently mentioned. 

That being said, the aim of our research is not to answer the "why" question. Insufficient robustness in the methodology used prevents us from drawing conclusions about causality. Rather, we take a more observational approach, concentrating on the "who" component. 

Our goal is to find traits that countries with high levels of young illiterate people have in common so that we can see trends within this group. In order to do so, we choose to focus on the young illiterate population, which is defined as those between the ages of 15 and 24. We'll be looking at this population country by country. Our main goal is to determine whether nations with high rates of youth illiteracy have something in common. 

To achieve this, we have selected multiple variables that we believe provide insightful information, including institutional stability, overall population, rural population, GDP, GDP per capita, access to electricity, and the percentage of enrollment by educational level, among others. 

At the end of our work, we anticipate two possible outcomes. First, no obvious trends show up, indicating that the distribution of the young illiterate population is actually random and dispersed quite evenly throughout the world's population. Second, similarities are observed among countries with high levels of illiteracy which will allow us to speculate on potential explanations for illiteracy.


## Graphical representation of our target variable

First, we want to have a look at the distribution over time of Illiterate demographic (15-24 years old) around the world.

```{r}
illiteracy |> filter(Country=="World") |> ggplot(aes(x= Time, y=Value/10^3)) + geom_line() + ylab("Number of illiterates (in thousands)") + ggtitle("Evolution of Illiteracy over the years")
```

```{r}
illiteracy |> filter(Country %in%  c("Sub-Saharan Africa", "Central and Eastern Europe", "South-Eastern Asia", "Central Asia", "Northern Africa and Western Asia", "Eastern and South-Eastern Asia", "Oceania (excluding Australia and New Zealand")) |> ggplot(aes(x= Time, y=Value/10^3)) + geom_col() + ylab("Number of illiterate people (in thousands)") + ggtitle("Evolution of Illiteracy over time per region") + facet_wrap(~Country)
```
### Creation of Regions
```{r}
CentralAsia <- c("Armenia", "Azerbaijan", "Georgia", "Kazakhstan", "Kyrgyzstan", "Mongolia", "Tajikistan", "Turkmenistan", "Uzbekistan")



NortAfricaAndWestAsia <- c("Algeria", "Egypt", "Libya", "Morocco", "Sudan",  "Tunisia", "Western Sahara", "Azerbaijan", "Armenia",  "Bahrain", "Cyprus", "Georgia", "Iraq", "Israel", "Jordan", "Kuwait", "Lebanon", "Oman", "Palestine",  "Qatar", "Saudi Arabia", "Syrian Arab Republic", "Turkey", "United Arab Emirates", "Yemen")



SubSahara <- c("Angola", "Benin", "Botswana", "Burkina Faso", "Burundi", "Cabo Verde", "Cameroon", "Central African Republic", "Chad", "Comoros", "Congo, Democratic Republic of", "Congo, Republic of", "Cote d'Ivoire", "Equatorial Guinea", "Eritrea", "Eswatini", "Ethiopia", "Gabon", "Gambia, The", "Ghana", "Guinea", "Guinea-Bissau", "Kenya", "Lesotho", "Liberia", "Madagascar", "Malawi", "Mali", "Mauritania", "Mauritius", "Mozambique", "Namibia", "Niger", "Nigeria", "Rwanda", "Sao Tome and Principe", "Senegal", "Seychelles", "Sierra Leone", "Somalia", "South Africa", "South Sudan", "Sudan", "Tanzania", "Togo", "Uganda", "Zambia", "Zimbabwe")


CentralAndEasternEurope <- c("Albania", "Belarus", "Bosnia and Herzegovina", "Bulgaria", "Croatia", "Czech Republic", "Estonia", "Hungary", "Kosovo", "Latvia", "Lithuania", "Moldova", "Montenegro", "North Macedonia", "Poland", "Romania", "Serbia", "Slovakia", "Slovenia", "Ukraine")


EastAndSoutheastAsia <- c("Brunei", "Cambodia", "China", "Indonesia", "Japan", "Laos", "Malaysia", "Myanmar", "Philippines", "Singapore", "South Korea", "Thailand", "Timor-Leste", "Vietnam")


SoutheastAsia <- c("Brunei", "Cambodia", "Indonesia", "Laos", "Malaysia", "Myanmar", "Philippines", "Singapore", "Thailand", "Timor-Leste", "Vietnam")
```


### Young Pop regions
```{r}
young_pop_CentralAsia <-
  young_pop |>
  filter(Country %in% CentralAsia) |>
  group_by(Time) |>
  summarise(total_value = sum(Value, na.rm = TRUE))
young_pop_CentralAsia <- young_pop_CentralAsia |> mutate("Region"= "Central Asia")
```

```{r}
young_pop_NorthAfricaAndWestAsia <-
  young_pop |>
  filter(Country %in% NortAfricaAndWestAsia) |>
  group_by(Time) |>
  summarise(total_value = sum(Value, na.rm = TRUE))
young_pop_NorthAfricaAndWestAsia <-young_pop_NorthAfricaAndWestAsia |> mutate("Region"= "North Africa And West Asia")
```

```{r}
young_pop_SubSahara <-
  young_pop |>
  filter(Country %in% SubSahara) |>
  group_by(Time) |>
  summarise(total_value = sum(Value, na.rm = TRUE))
young_pop_SubSahara <- young_pop_SubSahara |> mutate("Region"="SubSahara")
```

```{r}
young_pop_CentralAndEasternEurope <-
  young_pop |>
  filter(Country %in% CentralAndEasternEurope) |>
  group_by(Time) |>
  summarise(total_value = sum(Value, na.rm = TRUE))
young_pop_CentralAndEasternEurope <- young_pop_CentralAndEasternEurope |> mutate("Region"= "Central And Eastern Europe")
```

```{r}
young_pop_EastAndSouthEastAsia <-
  young_pop |>
  filter(Country %in% EastAndSoutheastAsia) |>
  group_by(Time) |>
  summarise(total_value = sum(Value, na.rm = TRUE))
young_pop_EastAndSouthEastAsia <- young_pop_EastAndSouthEastAsia |> mutate("Region"= "East And South East Asia")
```

```{r}
young_pop_SouthEastAsia <-
  young_pop |>
  filter(Country %in% SoutheastAsia) |>
  group_by(Time) |>
  summarise(total_value = sum(Value, na.rm = TRUE))
young_pop_SouthEastAsia <- young_pop_SouthEastAsia |> mutate("Region"= "South East Asia")
```

### Illiterate per region
```{r}
illiteracy_CentralAsia <-
  illiteracy |>
  filter(Country %in% CentralAsia) |>
  group_by(Time) |>
  summarise(total_value = sum(Value, na.rm = TRUE))
illiteracy_CentralAsia <- illiteracy_CentralAsia |> mutate("Region"= "Central Asia")
```

```{r}
illiteracy_NorthAfricaAndWestAsia <-
  illiteracy |>
  filter(Country %in% NortAfricaAndWestAsia) |>
  group_by(Time) |>
  summarise(total_value = sum(Value, na.rm = TRUE))
illiteracy_NorthAfricaAndWestAsia <- illiteracy_NorthAfricaAndWestAsia |> mutate("Region"= "North Africa And West Asia")
```

```{r}
illiteracy_SubSahara <-
  illiteracy |>
  filter(Country %in% SubSahara) |>
  group_by(Time) |>
  summarise(total_value = sum(Value, na.rm = TRUE))
illiteracy_SubSahara <- illiteracy_SubSahara |> mutate("Region"= "SubSahara")
```

```{r}
illiteracy_CentralAndEasternEurope <-
  illiteracy |>
  filter(Country %in% CentralAndEasternEurope) |>
  group_by(Time) |>
  summarise(total_value = sum(Value, na.rm = TRUE))
illiteracy_CentralAndEasternEurope <- illiteracy_CentralAndEasternEurope |> mutate("Region"= "Central And Eastern Europe")
```

```{r}
illiteracy_EastAndSouthEastAsia <-
  illiteracy |>
  filter(Country %in% EastAndSoutheastAsia) |>
  group_by(Time) |>
  summarise(total_value = sum(Value, na.rm = TRUE))
illiteracy_EastAndSouthEastAsia <- illiteracy_EastAndSouthEastAsia |> mutate("Region"= "East And South East Asia")
```

```{r}
illiteracy_SouthEastAsia <-
  illiteracy |>
  filter(Country %in% SoutheastAsia) |>
  group_by(Time) |>
  summarise(total_value = sum(Value, na.rm = TRUE))
illiteracy_SouthEastAsia <- illiteracy_SouthEastAsia |> mutate("Region"= "South East Asia")
```

### Concatenation of Regions for Young Population Datasets
```{r}
young_pop_regions <- rbind(young_pop_CentralAsia, young_pop_NorthAfricaAndWestAsia)
young_pop_regions <- rbind(young_pop_regions, young_pop_SubSahara)
young_pop_regions <- rbind(young_pop_regions, young_pop_CentralAndEasternEurope)
young_pop_regions <- rbind(young_pop_regions, young_pop_EastAndSouthEastAsia)
young_pop_regions <- rbind(young_pop_regions, young_pop_SouthEastAsia)
```


### Concatenation of Regions for Illiterate Datasets
```{r}
illiteracy_regions <- rbind(illiteracy_CentralAsia, illiteracy_NorthAfricaAndWestAsia)
illiteracy_regions <- rbind(illiteracy_regions, illiteracy_SubSahara)
illiteracy_regions <- rbind(illiteracy_regions, illiteracy_CentralAndEasternEurope)
illiteracy_regions <- rbind(illiteracy_regions, illiteracy_EastAndSouthEastAsia)
illiteracy_regions <- rbind(illiteracy_regions, illiteracy_SouthEastAsia)
```

### Creation percentage per region
```{r}
illiteracy_regions <- illiteracy_regions |> rename("illiteracy"= "total_value")
young_pop_regions <- young_pop_regions |> rename("young_pop"= "total_value")
```

### Join of both datasets
```{r}
inner_join(illiteracy_regions, young_pop_regions, by=c("Region", "Time")) |> mutate("illiterate_rate_regions"= 100*(illiteracy/young_pop)) |> select(Time, Region, illiterate_rate_regions) |> ggplot(aes(x= Time, y=illiterate_rate_regions)) + geom_col() + ylab("Illiteracy rate") + ggtitle("Evolution of Illiteracy over time") + facet_wrap(~Region)
```

Donc c'est pas tellement un effet de taille, mais on a un problème parce que la taille de notre dernier dataset est très petit. 

## Creation illiterate rate 

```{r}
illiterate_rate <- inner_join(illiteracy, young_pop, by = c("Country", "Time")) |> rename("YoungPop"= "Value.y", "Illiterate"="Value.x")
illiterate_rate <- illiterate_rate |> mutate("illiterate_rate"= (Illiterate/YoungPop)*100) |> filter(!is.na(illiterate_rate))
```


### Map
```{r}
world_map <- map_data("world")
world_map = map_data("world") |> filter(! long > 180)

missing_data <- illiterate_rate |>
  filter(is.na(YoungPop) | is.na(Illiterate)) |>
  mutate(MeanRate = NA)  

summarized_data <- illiterate_rate |>
  group_by(Country) |>
  summarise("Total young pop" = sum(YoungPop, na.rm = TRUE),
            "Total illiterate" = sum(Illiterate, na.rm = TRUE),
            "Mean rate" = `Total illiterate` / `Total young pop` * 100)

combined_data <- bind_rows(summarized_data, missing_data)

ggplot() +
  geom_map(data = world_map, map = world_map,
           aes(map_id = region),
           fill = "grey", color = "white") +
  geom_map(data = combined_data, map = world_map,
           aes(fill = `Mean rate`, map_id = Country),
           color = "white") +
  expand_limits(x = world_map$long, y = world_map$lat) +
  coord_map("moll") +
  theme_map() + ggtitle("Illustration of the world illiteracy mean rate")

```



## Creation groupe
```{r}
illiterate_rate <- illiterate_rate |> group_by(Time) |> 
  mutate(GROUP = case_when(
      illiterate_rate <= quantile(illiterate_rate, 0.3, na.rm = TRUE) ~ 1,
      quantile(illiterate_rate, 0.3, na.rm = TRUE) < illiterate_rate & illiterate_rate <= quantile(illiterate_rate, 0.70, na.rm = TRUE) ~ 2,
      quantile(illiterate_rate, 0.70, na.rm = TRUE) < illiterate_rate ~ 3,
      TRUE ~ NA ))
```

### Graphical Representation
```{r}
expenditure_rate <- inner_join(educ_expenditure, GDP, by = c("Country", "Time")) |> mutate("exp_rate"= Value.x/Value.y) |> select(Country, Time, -Indicator.x, exp_rate)
young_pop <- young_pop |> rename("Population"= "Value")
```

```{r}
inner_join(illiterate_rate, expenditure_rate, by = c("Country", "Time")) |> inner_join(young_pop, by = c("Country", "Time")) |> filter(GROUP != 2) |> ggplot(aes(fill=as.factor(GROUP), y=exp_rate, x=as.factor(Time))) + geom_boxplot(position="dodge", alpha=0.5) + coord_flip()+ guides(fill = guide_legend(title = "Group")) + labs(title = "Boxplot of Expenditure on Education Rate Over Time per group",x = "Time", y = "Expenditure on Education Rate") 
```


```{r}
enrol_exp <- inner_join(enrolment, expenditure_rate, by=c("Country", "Time")) |> mutate("Value"= Value/100) |> rename("enrolment"= "Value")

lm(enrolment ~ exp_rate + as.factor(Time), data = enrol_exp) |> summary() 
```



## Illiteracy vs enrolement 
```{r}
inner_join(illiterate_rate, enrolment, by=c("Country", "Time")) |> filter(Time!=2021, !is.na(GROUP)) |> ggplot(aes(x = Value, y = illiterate_rate, label = Country)) + geom_point(alpha = .3) + facet_wrap(~GROUP) + xlab("enrolment percentage") + ylab("illiterate percentage") + ggtitle("impact of enrolment on illiteracy per group")
```

## illiteracy vs electricity vs rural
```{r}
rural <- rural |> rename("rural_per"="Value")
electricity <- electricity |> rename("electricity_per"="Value")
GDP_capita <- GDP_capita |> rename("GDP per capita"="Value")
```
```{r}
data2 <- inner_join(illiterate_rate, electricity, by = c("Time", "Country")) |>  inner_join(rural, by = c("Time", "Country")) 

quantile1 <- quantile(data2$illiterate_rate, 0.3, na.rm=T)
quantile2 <- quantile(data2$illiterate_rate, 0.7, na.rm=T)

data2 |> select(rural_per, illiterate_rate, electricity_per, Time) |> na.omit() |> ggplot(aes(x = rural_per, y = illiterate_rate, color = electricity_per)) +  geom_point(alpha=.5) + scale_color_gradient(low = "green", high = "red") + geom_hline(yintercept = quantile1, linetype = "dashed", color = "black") + geom_hline(yintercept = quantile2, linetype = "dashed", color = "black") + labs(title = "Relation between rural, illiterate and electricity share", x = "Rural percentage", y = "Illiterate percentage")
```


## illiteracy vs PressFreedom vs Institutions 
```{r}
PressFreedomIndex <- PressFreedomIndex |>
  group_by(Time) |>
  mutate(GROUP_press = case_when(
    `Press Freedom Index` <= 15 ~ 1,
    15 < `Press Freedom Index` & `Press Freedom Index` <= 25 ~ 2,
    25 < `Press Freedom Index` & `Press Freedom Index` <= 35 ~ 3,
    35 < `Press Freedom Index`& `Press Freedom Index` <= 55 ~ 4,
    55 < `Press Freedom Index` ~ 5,
    TRUE ~ NA))

#Note: Good = 0–15 points; Satisfactory = 15–25; Problematic = 25–35; Difficult = 35–55; Very;serious = 55–100.

institution <- institution |> group_by(Time) |> mutate(GROUP_inst = case_when(
  `Value` <= 3 ~ 1, 
  3 < `Value` & `Value` <= 7 ~ 2, 
  7 < `Value` ~ 3,
  TRUE ~ NA))

data3 <- inner_join(illiterate_rate,PressFreedomIndex, by = c("Time", "Country")) |> inner_join(institution, by = c("Time", "Country"))
vcd::mosaic(GROUP_press ~ GROUP + GROUP_inst, data = data3, direction = c("v", "v", "h"), highlighting_fill = RColorBrewer::brewer.pal(5, "Accent"))
```


## Illiteracy vs GDP per capita vs Life expectancy
```{r}
inner_join(illiterate_rate,life_expectancy, by = c("Time", "Country")) |> inner_join(GDP_capita, by = c("Time", "Country")) |> mutate("GROUP"=as.factor(GROUP)) |> ggplot(aes(x=`GDP per capita`, y= Value, color = GROUP)) + geom_point(alpha=0.3, size = 10) + scale_size(range = c(.1, 24)) + theme(legend.position="bottom") + ylab("Life Expectancy") + xlab("Gdp per Capita") 
```

